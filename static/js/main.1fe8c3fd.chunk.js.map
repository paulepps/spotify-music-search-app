{"version":3,"sources":["utils/constants.js","reducers/albums.js","reducers/artists.js","reducers/playlist.js","store/store.js","components/Header.js","components/Home.js","utils/functions.js","components/RedirectPage.js","utils/api.js","actions/result.js","components/SearchForm.js","images/music.jpeg","components/AlbumsList.js","components/ArtistsList.js","components/PlayList.js","components/SearchResult.js","components/Loader.js","components/Dashboard.js","components/NotFoundPage.js","router/AppRouter.js","index.js"],"names":["SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","albumsReducer","state","action","albums","type","next","items","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","Header","className","connect","props","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","isValidSession","location","sessionExpired","session_expired","to","Alert","variant","Button","onClick","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","access_token","error","console","log","RedirectPage","useEffect","setExpiryTime","history","_","isEmpty","hash","push","slice","split","reduce","prev","curr","title","value","expiryTime","Date","getTime","expires_in","setItem","stringify","get","url","a","result","data","setAlbums","setArtists","setPlayList","initiateLoadMoreAlbums","dispatch","initiateLoadMoreArtists","initiateLoadMorePlaylist","SearchForm","useState","searchTerm","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Label","Control","name","placeholder","onChange","target","autoComplete","AlbumsList","Object","keys","length","map","album","index","Fragment","Card","style","width","href","external_urls","spotify","rel","images","src","music","alt","Img","Body","Title","Text","artist","join","ArtistsList","PlayList","item","owner","display_name","SearchResult","loadMore","setCategory","selectedCategory","pathname","Loader","document","createElement","node","loader","querySelector","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","Dashboard","isLoading","setIsLoading","setSelectedCategory","useDispatch","useSelector","API_URL","encodeURIComponent","initiateGetResult","then","category","NotFoundPage","AppRouter","setState","basename","path","exact","render","component","getElementById"],"mappings":"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","file":"static/js/main.1fe8c3fd.chunk.js","sourcesContent":["export const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST';\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST';","import { SET_ALBUMS, ADD_ALBUMS } from \"../utils/constants\";\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default albumsReducer;\r\n","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\nconst playlistReducer = (state = {}, action) => {\r\n  const { playlists } = action;\r\n  switch (action.type) {\r\n    case SET_PLAYLIST:\r\n      return playlists;\r\n    case ADD_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        next: playlists.next,\r\n        items: [...state.items, ...playlists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport albumsReducer from '../reducers/albums';\r\nimport artistsReducer from '../reducers/artists';\r\nimport playlistReducer from '../reducers/playlist';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    albums: albumsReducer,\r\n    artists: artistsReducer,\r\n    playlist: playlistReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return <h1 className=\"main-heading\">Spotify Music Search</h1>;\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport Header from './Header';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Home = (props) => {\r\n  const {\r\n    REACT_APP_CLIENT_ID,\r\n    REACT_APP_AUTHORIZE_URL,\r\n    REACT_APP_REDIRECT_URL\r\n  } = process.env;\r\n  const handleLogin = () => {\r\n    window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true`;\r\n  };\r\n  const { isValidSession, location } = props;\r\n  const { state } = location;\r\n  const sessionExpired = state && state.session_expired;\r\n\r\n  return (\r\n    <>\r\n      {isValidSession() ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <div className=\"login\">\r\n          <Header />\r\n          {sessionExpired && (\r\n            <Alert variant=\"info\">Session expired. Please login again.</Alert>\r\n          )}\r\n          <Button variant=\"info\" type=\"submit\" onClick={handleLogin}>\r\n            Login to Spotify\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default connect()(Home);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params.access_token}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};","import { useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { getParamValues } from \"../utils/functions\";\r\n\r\nconst RedirectPage = (props) => {\r\n  useEffect(() => {\r\n    const { setExpiryTime, history, location } = props;\r\n    try {\r\n      if (_.isEmpty(location.hash)) {\r\n        return history.push(\"/dashboard\");\r\n      }\r\n      const access_token = getParamValues(location.hash);\r\n      const expiryTime = new Date().getTime() + access_token.expires_in * 1000;\r\n      localStorage.setItem(\"params\", JSON.stringify(access_token));\r\n      localStorage.setItem(\"expiry_time\", expiryTime);\r\n      setExpiryTime(expiryTime);\r\n      history.push(\"/dashboard\");\r\n    } catch (error) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default RedirectPage;","import axios from 'axios';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_PLAYLIST,\r\n  ADD_PLAYLIST,\r\n} from \"../utils/constants\";\r\nimport { get } from \"../utils/api\";\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums,\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums,\r\n});\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists,\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists,\r\n});\r\nexport const setPlayList = (playlists) => ({\r\n  type: SET_PLAYLIST,\r\n  playlists,\r\n});\r\nexport const addPlaylist = (playlists) => ({\r\n  type: ADD_PLAYLIST,\r\n  playlists,\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=album,playlist,artist`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { albums, artists, playlists } = result;\r\n      dispatch(setAlbums(albums));\r\n      dispatch(setArtists(artists));\r\n      return dispatch(setPlayList(playlists));\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addPlaylist(result.playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n  \r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== \"\") {\r\n      setErrorMsg(\"\");\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg(\"Please enter a search term.\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Enter search term</Form.Label>\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search for album, artist or playlist\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"info\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={album.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(album.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={album.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{album.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>\r\n                        {album.artists.map((artist) => artist.name).join(', ')}\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AlbumsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={artist.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(artist.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={artist.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{artist.name}</Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"playlist\">\r\n          {playlist.items.map((item, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={item.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(item.images) ? (\r\n                      <Card.Img variant=\"top\" src={item.images[0].url} alt=\"\" />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{item.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>By {item.owner.display_name}</small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PlayList;","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport AlbumsList from \"./AlbumsList\";\r\nimport ArtistsList from \"./ArtistsList\";\r\nimport PlayList from \"./PlayList\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { albums, artists, playlist } = result;\r\n\r\n  if (!props.isValidSession()) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/',\r\n          state: {\r\n            session_expired: true\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === \"albums\" ? \"btn active\" : \"btn\"\r\n            }`}\r\n            onClick={() => setCategory(\"albums\")}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === \"artists\" ? \"btn active\" : \"btn\"\r\n            }`}\r\n            onClick={() => setCategory(\"artists\")}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === \"playlist\" ? \"btn active\" : \"btn\"\r\n            }`}\r\n            onClick={() => setCategory(\"playlist\")}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={`${selectedCategory === \"albums\" ? \"\" : \"hide\"}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === \"artists\" ? \"\" : \"hide\"}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === \"playlist\" ? \"\" : \"hide\"}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n        !_.isEmpty(result[selectedCategory].next) && (\r\n          <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\r\n            <Button variant=\"info\" type=\"button\">\r\n              Load More\r\n            </Button>\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n};\r\nexport default SearchResult;\r\n","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists,\r\n} from \"../actions/result\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport Header from \"./Header\";\r\nimport Loader from \"./Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"albums\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const albums = useSelector((state) => state.albums);\r\n  const artists = useSelector((state) => state.artists);\r\n  const playlist = useSelector((state) => state.playlist);\r\n\r\n  const { isValidSession, history } = props;\r\n  const handleSearch = (searchTerm) => {\r\n    if (isValidSession()) {\r\n      setIsLoading(true);\r\n      dispatch(initiateGetResult(searchTerm)).then(() => {\r\n        setIsLoading(false);\r\n        setSelectedCategory(\"albums\");\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: \"/\",\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCategory = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    if (isValidSession()) {\r\n      setIsLoading(true);\r\n      switch (type) {\r\n        case \"albums\":\r\n          await dispatch(initiateLoadMoreAlbums(albums.next));\r\n          break;\r\n        case \"artists\":\r\n          await dispatch(initiateLoadMoreArtists(artists.next));\r\n          break;\r\n        case \"playlist\":\r\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n          break;\r\n        default:\r\n      }\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push({\r\n        pathname: \"/\",\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const result = { albums, artists, playlist };\r\n\r\n  return isValidSession ?\r\n  (\r\n    <div>\r\n      <Header />\r\n      <SearchForm handleSearch={handleSearch} />\r\n      <Loader show={isLoading}>Loading...</Loader>\r\n      <SearchResult\r\n        result={result}\r\n        loadMore={loadMore}\r\n        setCategory={setCategory}\r\n        selectedCategory={selectedCategory}\r\n        isValidSession={isValidSession}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      Page not found. Go to <Link to=\"/dashboard\">Home Page</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../components/Home\";\r\nimport RedirectPage from \"../components/RedirectPage\";\r\nimport Dashboard from \"../components/Dashboard\";\r\nimport NotFoundPage from \"../components/NotFoundPage\";\r\nconst AppRouter = () => {\r\n  const [state, setState] = useState({ expiryTime: \"0\" });\r\n\r\n  useEffect(() => {\r\n    let expiryTime;\r\n    try {\r\n      expiryTime = JSON.parse(localStorage.getItem(\"expiry_time\"));\r\n    } catch (error) {\r\n      expiryTime = \"0\";\r\n    }\r\n    setState({ expiryTime });\r\n  }, []);\r\n\r\n  const setExpiryTime = (expiryTime) => {\r\n    setState({ expiryTime });\r\n  };\r\n\r\n  const isValidSession = () => {\r\n    const currentTime = new Date().getTime();\r\n    const expiryTime = state.expiryTime;\r\n    const isSessionValid = currentTime < expiryTime;\r\n\r\n    return isSessionValid;\r\n  };\r\n\r\n  return (\r\n    <HashRouter basename=\"/spotify-music-search-app\">\r\n      <div className=\"main\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact={true}\r\n            render={(props) => (\r\n              <Home isValidSession={isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/redirect\"\r\n            exact={true}\r\n            render={(props) => (\r\n              <RedirectPage\r\n                isValidSession={isValidSession}\r\n                setExpiryTime={setExpiryTime}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            exact={true}\r\n            render={(props) => (\r\n              <Dashboard isValidSession={isValidSession} {...props} />\r\n            )}\r\n          />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport AppRouter from './router/AppRouter';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);  "],"sourceRoot":""}